<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>软件工程 on 爱解决</title><link>https://jiejue.ai/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link><description>Recent content in 软件工程 on 爱解决</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 08 Aug 2025 09:21:59 +0400</lastBuildDate><atom:link href="https://jiejue.ai/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>Git分支合并冲突解决：分布式版本控制的实战策略</title><link>https://jiejue.ai/2025/08/git-merge-conflict-resolution-deep/</link><pubDate>Fri, 08 Aug 2025 09:17:46 +0400</pubDate><guid>https://jiejue.ai/2025/08/git-merge-conflict-resolution-deep/</guid><description>&lt;p>在现代软件开发中，分支合并冲突是团队协作中不可避免的技术挑战。本文将深入分析一个真实的冲突解决案例，探讨其背后的技术原理和最佳实践策略。&lt;/p>
&lt;p>通过这个案例，我们将看到如何将复杂的版本控制问题转化为可管理的、系统化的解决方案。&lt;/p></description></item><item><title>被遗忘的魔法层：POSIX 如何让计算机世界变得井然有序</title><link>https://jiejue.ai/2025/07/posix-abstraction-layer-architecture/</link><pubDate>Thu, 31 Jul 2025 19:45:56 +0400</pubDate><guid>https://jiejue.ai/2025/07/posix-abstraction-layer-architecture/</guid><description>&lt;p>想象一下，如果每个城市都有自己独特的交通规则：红灯在一个城市表示通行，在另一个城市表示停止；有些地方靠左行驶，有些地方靠右行驶，而且没有任何标准可循。这样的世界会是什么样子？&lt;/p>
&lt;p>这正是 1980 年代计算机世界的真实写照。不同的 Unix 系统各自为政，相同的程序无法在不同系统间移植，程序员们苦不堪言。直到一个名为 POSIX 的标准出现，它就像制定了统一的&amp;quot;交通规则&amp;quot;，让整个计算机世界变得井然有序。&lt;/p></description></item><item><title>Git的设计哲学：为什么Merge比Cherry-pick更智能？</title><link>https://jiejue.ai/2025/06/git-merge-vs-cherry-pick-design-philosophy/</link><pubDate>Thu, 19 Jun 2025 00:32:09 +0400</pubDate><guid>https://jiejue.ai/2025/06/git-merge-vs-cherry-pick-design-philosophy/</guid><description>&lt;p>作为程序员，我们每天都在使用Git，但你真的理解它的设计哲学吗？最近在一个开发场景中，我遇到了一个有趣的问题：当我的开发分支缺少一个即将被推送到主分支的文件时，应该用cherry-pick还是merge来解决？这个看似简单的选择，背后藏着Git设计的核心智慧。&lt;/p></description></item><item><title>软件开发中的Triage机制：新人必知的资源分配游戏</title><link>https://jiejue.ai/2025/06/software-triage-mechanism-guide/</link><pubDate>Wed, 18 Jun 2025 23:03:56 +0400</pubDate><guid>https://jiejue.ai/2025/06/software-triage-mechanism-guide/</guid><description>&lt;p>当你刚进入软件开发行业时，可能会经常听到&amp;quot;triage&amp;quot;这个词。你的项目经理说要对bug做triage，开源项目的PR被标记为triage状态，云服务的工单也在triage队列中等待处理。这个来自医疗领域的词汇，在IT世界里到底意味着什么？&lt;/p></description></item></channel></rss>