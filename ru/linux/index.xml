<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on ЛюбимРешать</title><link>https://jiejue.ai/ru/linux/</link><description>Recent content in Linux on ЛюбимРешать</description><generator>Hugo</generator><language>ru-RU</language><lastBuildDate>Wed, 13 Aug 2025 15:03:02 +0000</lastBuildDate><atom:link href="https://jiejue.ai/ru/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Секреты временных каталогов: логика безопасности, скрывающаяся за /tmp и /private/tmp</title><link>https://jiejue.ai/ru/2025/04/tmp-private-tmp-security/</link><pubDate>Tue, 15 Apr 2025 23:14:00 +0400</pubDate><guid>https://jiejue.ai/ru/2025/04/tmp-private-tmp-security/</guid><description>&lt;p>Почему &lt;code>/tmp&lt;/code> и &lt;code>/private/tmp&lt;/code> кажутся одним и тем же каталогом в macOS, но могут по-разному обрабатываться с точки зрения контроля безопасности? Каких лучших практик следует придерживаться, когда нам нужны временные каталоги для экспериментов? В этой статье мы раскроем технические тайны и соображения безопасности, лежащие в основе временных каталогов.&lt;/p></description></item><item><title>Файловая система Linux: от инода к линковке</title><link>https://jiejue.ai/ru/2025/04/linux-filesystem-internals/</link><pubDate>Sun, 06 Apr 2025 18:16:06 +0400</pubDate><guid>https://jiejue.ai/ru/2025/04/linux-filesystem-internals/</guid><description>&lt;p>Вы когда-нибудь были озадачены поведением команд Linux? Например, почему команда &lt;strong>PROTECTED_INLINE_CODE__6&lt;/strong> удаляет не только связанные, но и обычные файлы? Почему после удаления некоторых файлов место на жестком диске освобождается не сразу? Эти вопросы тесно связаны с принципами работы файловой системы. В этой статье мы рассмотрим основные концепции файловой системы Linux, чтобы помочь вам понять механизмы работы файлов, каталогов и ссылок.&lt;/p></description></item><item><title>Более глубокое понимание команды tar: технические детали для эффективной передачи большого количества маленьких файлов</title><link>https://jiejue.ai/ru/2025/03/deep-dive-efficient-file-transfer-with-tar/</link><pubDate>Thu, 27 Mar 2025 23:10:12 +0400</pubDate><guid>https://jiejue.ai/ru/2025/03/deep-dive-efficient-file-transfer-with-tar/</guid><description>&lt;p>Во время миграции системы, резервного копирования проектов или передачи больших объемов данных мы часто сталкиваемся с ситуациями, когда необходимо работать с большим количеством маленьких файлов. Когда число таких файлов достигает десятков или даже сотен тысяч, обычные методы репликации часто приводят к тому, что процесс передачи данных становится аномально медленным. В этой статье мы рассмотрим технические причины этой проблемы и подробно расскажем о том, как использовать команду tar для эффективного решения этой задачи.&lt;/p></description></item><item><title>Элегантная обработка журнальных файлов с помощью awk: от введения к практике</title><link>https://jiejue.ai/ru/2025/02/awk-log-processing-guide/</link><pubDate>Sun, 23 Feb 2025 10:51:32 +0400</pubDate><guid>https://jiejue.ai/ru/2025/02/awk-log-processing-guide/</guid><description>&lt;p>В повседневной работе нам часто приходится иметь дело с лог-файлами различных форматов. Иногда формат журнала не является идеальным, и нам необходимо выполнить преобразование и обработку, чтобы лучше проанализировать данные. Сегодня я расскажу вам, как использовать awk, мощный инструмент обработки текста, для элегантной обработки лог-файлов.&lt;/p></description></item><item><title>Извлечение и анализ сообщений JSON из журналов</title><link>https://jiejue.ai/ru/2025/02/extract-json-from-logs/</link><pubDate>Sun, 16 Feb 2025 20:34:33 +0400</pubDate><guid>https://jiejue.ai/ru/2025/02/extract-json-from-logs/</guid><description>&lt;p>В оперативной работе нам часто приходится извлекать и анализировать специфическую информацию из файлов журналов. Недавно я столкнулся со сценарием, в котором мне нужно было извлечь и подсчитать различные типы вызовов API из файла журнала, содержащего большое количество сообщений в формате JSON. В этом посте мы расскажем о том, как использовать инструменты командной строки Linux для эффективного выполнения этой работы.&lt;/p>
&lt;p>&amp;lt;! &amp;ndash;подробнее&amp;ndash;&amp;gt;&lt;/p>
&lt;h2 id="проблемный-фон">Проблемный фон&lt;/h2>
&lt;p>Предположим, у нас есть лог-файл системы микросервисов &lt;code>/var/log/app-server.log&lt;/code>, который содержит большое количество сообщений в формате JSON, подобных этому:&lt;/p></description></item></channel></rss>