<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on ЛюбимРешать</title><link>https://jiejue.ai/ru/devops/</link><description>Recent content in DevOps on ЛюбимРешать</description><generator>Hugo</generator><language>ru-RU</language><lastBuildDate>Wed, 13 Aug 2025 18:35:28 +0400</lastBuildDate><atom:link href="https://jiejue.ai/ru/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Полное руководство по управлению выводом yq: искусство преобразования данных из YAML в любой формат</title><link>https://jiejue.ai/ru/2025/08/yq-output-control-complete-guide/</link><pubDate>Mon, 11 Aug 2025 18:58:27 +0400</pubDate><guid>https://jiejue.ai/ru/2025/08/yq-output-control-complete-guide/</guid><description>&lt;p>Представьте, что вы - инженер DevOps, у которого под рукой сложный конфигурационный файл Kubernetes, содержащий информацию о конфигурации десятков сервисов. Внезапно руководство просит вас извлечь таблицу Excel с именами, номерами версий и конфигурациями ресурсов всех сервисов. Использование традиционных методов может потребовать многочасового ручного копирования и вставки, но, овладев навыками управления выводом yq, эту задачу можно решить с помощью всего одной строки команды.&lt;/p></description></item><item><title>Освоение yq pick: элегантное извлечение нескольких ключевых значений из YAML</title><link>https://jiejue.ai/ru/2025/08/yq-pick-multiple-keys-from-yaml/</link><pubDate>Thu, 07 Aug 2025 19:26:33 +0400</pubDate><guid>https://jiejue.ai/ru/2025/08/yq-pick-multiple-keys-from-yaml/</guid><description>&lt;p>В повседневной работе DevOps нам часто приходится извлекать определенные пары ключ-значение из сложных конфигурационных файлов YAML. Работаете ли вы с Kubernetes ConfigMap, файлами значений Helm или различными конфигурациями приложений, точный выбор необходимых элементов конфигурации является распространенной, но важной задачей.&lt;/p></description></item><item><title>Почему развертывание Helm не удается, а Kustomize - удается? Глубокое погружение в различия в проверке YAML в инструментах конфигурации Kubernetes</title><link>https://jiejue.ai/ru/2025/07/helm-vs-kustomize-yaml-validation-differences/</link><pubDate>Thu, 31 Jul 2025 17:14:09 +0400</pubDate><guid>https://jiejue.ai/ru/2025/07/helm-vs-kustomize-yaml-validation-differences/</guid><description>&lt;p>Сталкивались ли вы с такой ситуацией: один и тот же конфигурационный файл YAML в одном окружении с развертыванием Helm выдает ошибку, а изменение в другом окружении с Kustomize может быть успешным? Если вас когда-нибудь беспокоил этот &amp;ldquo;психический феномен&amp;rdquo;, то эта статья откроет вам правду.&lt;/p></description></item><item><title>yq: инструмент для простой и эффективной обработки файлов YAML</title><link>https://jiejue.ai/ru/2025/07/yq-yaml-processor-guide/</link><pubDate>Tue, 22 Jul 2025 20:32:34 +0400</pubDate><guid>https://jiejue.ai/ru/2025/07/yq-yaml-processor-guide/</guid><description>&lt;p>Часто ли вам, как операционному инженеру, требуется найти определенную конфигурацию сервиса в сложных конфигурационных файлах Kubernetes? Если вы все еще используете текстовый редактор для поиска строки за строкой или пишете сложные скрипты для работы с YAML-файлами, то yq - это инструмент, который полностью изменит вашу работу.&lt;/p></description></item><item><title>yq: jq-инструмент YAML для элегантных запросов к конфигурационным файлам</title><link>https://jiejue.ai/ru/2025/07/yq-yaml-query-tool-for-developers/</link><pubDate>Mon, 21 Jul 2025 21:52:19 +0400</pubDate><guid>https://jiejue.ai/ru/2025/07/yq-yaml-query-tool-for-developers/</guid><description>&lt;p>Если вы DevOps-инженер или администратор Kubernetes, вы знаете, каково это - ежедневно работать с конфигурационными файлами YAML. От конфигурации стручков до определений сервисов, от ConfigMap до правил Ingress - YAML присутствует везде. Но когда эти файлы становятся сложными, возникает проблема быстрого извлечения и манипулирования данными в них.&lt;/p>
&lt;p>К счастью, yq - это инструмент, который делает работу с YAML такой же простой и элегантной, как работа с JSON с помощью jq.&lt;/p></description></item><item><title>Практическое руководство по аннотациям Kubernetes Ingress: полное объяснение от ошибки 413 до стриминга</title><link>https://jiejue.ai/ru/2025/07/k8s-ingress-annotations-guide/</link><pubDate>Tue, 15 Jul 2025 21:04:04 +0400</pubDate><guid>https://jiejue.ai/ru/2025/07/k8s-ingress-annotations-guide/</guid><description>&lt;p>Как работник Kubernetes, вы, вероятно, регулярно имеете дело с ресурсами Ingress, но вы можете просто скопировать и вставить конфигурацию этих на первый взгляд загадочных аннотаций, не зная, что они означают на самом деле. Когда вы сталкиваетесь с ошибкой 413 Request Entity Too Large, или вам нужно поддержать загрузку больших файлов или потоковую передачу, знаете ли вы, какие параметры нужно настроить?&lt;/p></description></item><item><title>Подробное описание проблем блокировки состояния Terraform Azure: разрешения, разблокировка и лучшие практики</title><link>https://jiejue.ai/ru/2025/06/terraform-azure-state-lock-troubleshooting/</link><pubDate>Wed, 25 Jun 2025 21:13:41 +0400</pubDate><guid>https://jiejue.ai/ru/2025/06/terraform-azure-state-lock-troubleshooting/</guid><description>&lt;p>Когда вы используете Terraform для управления ресурсами Azure в производственной среде, вы можете столкнуться с этой непонятной ошибкой: &lt;code>StatusCode=403 -- Исходная ошибка: autorest/azure: Service returned an error. status=403 Code = &amp;quot;AuthorisationFailure&amp;quot;&lt;/code>. За этой, казалось бы, простой ошибкой разрешения на самом деле скрывается управление статусами Terraform, разрешения на хранение Azure и основная философия проектирования инфраструктуры как кода.&lt;/p></description></item><item><title>Автоматизация выпусков с помощью Semantic Release: подводные камни и решения</title><link>https://jiejue.ai/ru/2025/03/automatic-versioning-with-semantic-release/</link><pubDate>Thu, 13 Mar 2025 21:15:50 +0400</pubDate><guid>https://jiejue.ai/ru/2025/03/automatic-versioning-with-semantic-release/</guid><description>&lt;p>В процессе разработки программного обеспечения версионирование кажется простым, но часто становится головной болью. Управлять версиями вручную не только утомительно, но и чревато ошибками. С помощью Semantic Release мы можем автоматизировать этот процесс, но есть некоторые подводные камни, которые можно легко упустить из виду. В этой статье мы расскажем о проблемах и решениях, с которыми столкнулась наша команда при использовании Semantic Release, чтобы помочь вам избежать этих подводных камней.&lt;/p></description></item><item><title>Элегантный доступ к сервисам интрасети с помощью Kubernetes и Fish Shell</title><link>https://jiejue.ai/ru/2025/03/elegant-internal-service-access-with-kubernetes-fish/</link><pubDate>Tue, 11 Mar 2025 22:29:45 +0400</pubDate><guid>https://jiejue.ai/ru/2025/03/elegant-internal-service-access-with-kubernetes-fish/</guid><description>&lt;p>Вам когда-нибудь требовался временный доступ к сервису во внутренней сети вашей компании, но вы не могли найти подходящий инструмент? Особенно когда VPN недоступна из-за ограничений безопасности или вам нужно подключиться к определенному сервису только на короткий промежуток времени? В этой статье мы представим решение на базе Kubernetes и Fish Shell, которое позволит вам безопасно и легко получить доступ к сервисам интрасети через кластерный прокси K8s.&lt;/p></description></item><item><title>Автоматизация выпуска проектов: от хаоса к стандартизированным практикам</title><link>https://jiejue.ai/ru/2025/02/release-automation-best-practices/</link><pubDate>Wed, 19 Feb 2025 21:49:58 +0400</pubDate><guid>https://jiejue.ai/ru/2025/02/release-automation-best-practices/</guid><description>&lt;p>Недавно, оптимизируя процесс выпуска проекта, мы обнаружили, что, хотя все мы знаем, что &amp;ldquo;спецификация важна&amp;rdquo;, на практике мы часто попадаем в странный круг &amp;ldquo;игнорирования спецификации ради быстрого выпуска&amp;rdquo;. В этой статье мы расскажем о том, как автоматизировать инструменты и стандартизировать процессы, чтобы сделать выпуск проекта более контролируемым и эффективным.&lt;/p></description></item><item><title>Kustomize Patch Operations Explained: пример управления конфигурацией K8s</title><link>https://jiejue.ai/ru/2025/02/kustomize-patches-guide/</link><pubDate>Sat, 08 Feb 2025 19:01:43 +0400</pubDate><guid>https://jiejue.ai/ru/2025/02/kustomize-patches-guide/</guid><description>&lt;p>При управлении конфигурациями Kubernetes нам часто приходится настраивать конфигурацию для различных сред. Например, тестовая среда может требовать иных параметров, чем производственная, или определенные функции могут быть включены только в определенных средах. Именно здесь пригодится функция патчей Kustomize.&lt;/p></description></item></channel></rss>