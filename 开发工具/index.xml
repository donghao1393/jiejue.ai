<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发工具 on 爱解决</title><link>https://jiejue.ai/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link><description>Recent content in 开发工具 on 爱解决</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 08 Aug 2025 09:09:43 +0400</lastBuildDate><atom:link href="https://jiejue.ai/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 文件隐藏完全指南：让不想要的文件「消失」的4种方法</title><link>https://jiejue.ai/2025/08/git-file-hiding-complete-guide/</link><pubDate>Fri, 08 Aug 2025 09:05:24 +0400</pubDate><guid>https://jiejue.ai/2025/08/git-file-hiding-complete-guide/</guid><description>&lt;p>你有没有遇到过这样的困扰：Git 总是提醒你有未跟踪的文件，但这些文件你既不想提交，又不想删除？比如系统自动生成的 &lt;code>.DS_Store&lt;/code> 文件，或者你的个人配置文件？&lt;/p>
&lt;p>今天我们来学习 4 种让这些&amp;quot;麻烦&amp;quot;文件在 Git 中&amp;quot;消失&amp;quot;的方法，每种方法都有自己的适用场景，掌握了它们，你就能让 Git 乖乖听话！&lt;/p></description></item><item><title>正则表达式的「方言」问题：为什么同样的代码在不同工具中表现不同？</title><link>https://jiejue.ai/2025/07/regex-dialects-practical-guide/</link><pubDate>Thu, 31 Jul 2025 19:45:56 +0400</pubDate><guid>https://jiejue.ai/2025/07/regex-dialects-practical-guide/</guid><description>&lt;p>你是否遇到过这样的困扰：在一个编辑器中完美运行的正则表达式，复制到另一个工具中却完全不工作？或者，你花了很长时间调试一个替换操作，最后发现问题出在一个小小的转义符号上？&lt;/p>
&lt;p>如果你有过这样的经历，那么你并不孤单。正则表达式虽然是程序员的得力工具，但它在不同工具和环境中的表现差异，常常让人头疼不已。&lt;/p></description></item><item><title>Git Stash选择性应用：如何只恢复需要的文件修改</title><link>https://jiejue.ai/2025/07/git-stash-selective-apply-files/</link><pubDate>Tue, 29 Jul 2025 19:09:11 +0400</pubDate><guid>https://jiejue.ai/2025/07/git-stash-selective-apply-files/</guid><description>&lt;p>在日常开发中，你是否遇到过这样的情况：修改了多个文件，但只想应用其中某些文件的修改，而把其他文件的修改先放一边？传统的git stash要么全部保存，要么全部恢复，但实际上Git提供了更灵活的选择性操作方法。&lt;/p></description></item><item><title>Git Cherry-pick追踪：解决代码变更血缘关系的迷失问题</title><link>https://jiejue.ai/2025/07/git-cherry-pick-tracking-guide/</link><pubDate>Thu, 24 Jul 2025 20:23:35 +0400</pubDate><guid>https://jiejue.ai/2025/07/git-cherry-pick-tracking-guide/</guid><description>&lt;p>作为一名开发者，你是否遇到过这样的困扰：在项目的不同分支间穿梭时，看到一些似曾相识的commit，却无法确定它们之间的关系？这个功能是从哪个分支来的？是直接开发的还是从别处cherry-pick过来的？如果是后者，原始的commit在哪里？&lt;/p></description></item><item><title>误删Git分支？别慌！一条命令帮你找回来</title><link>https://jiejue.ai/2025/07/git-branch-recovery-guide/</link><pubDate>Mon, 21 Jul 2025 20:27:29 +0400</pubDate><guid>https://jiejue.ai/2025/07/git-branch-recovery-guide/</guid><description>&lt;p>刚刚手滑删掉了一个重要的Git分支？看到那行红色的&amp;quot;Deleted branch&amp;quot;信息时是不是心都凉了半截？别担心，你的代码还在！只要掌握正确的方法，99%的情况下都能完美恢复。&lt;/p></description></item><item><title>Git如何智能处理文件重命名和合并冲突：超越commit的内容感知机制</title><link>https://jiejue.ai/2025/07/git-smart-merge-logic/</link><pubDate>Sat, 19 Jul 2025 00:04:51 +0400</pubDate><guid>https://jiejue.ai/2025/07/git-smart-merge-logic/</guid><description>&lt;p>当你遇到&lt;code>git pull&lt;/code>因为本地修改而失败时，可能会疑惑：为什么有时候简单的stash就能解决，有时候却需要复杂的冲突解决？更神奇的是，当你手动移动文件后，Git竟然能够智能地处理远程的重构操作。这背后的机制远比你想象的更精妙。&lt;/p></description></item><item><title>告别混乱：用 .gitignore 让你的项目目录清爽起来</title><link>https://jiejue.ai/2025/07/gitignore-clean-project/</link><pubDate>Fri, 18 Jul 2025 00:38:58 +0400</pubDate><guid>https://jiejue.ai/2025/07/gitignore-clean-project/</guid><description>&lt;p>你是不是也有过这样的困扰：打开项目文件夹，密密麻麻的文件让你头晕眼花？测试产生的临时文件、编辑器的备份文件、系统自动生成的缓存文件，还有各种日志文件&amp;hellip;每次 &lt;code>git status&lt;/code> 都显示一大堆&amp;quot;未跟踪的文件&amp;quot;，让你不知道哪些该提交，哪些不该提交。&lt;/p></description></item><item><title>Git Submodule 完全指南：一次搞懂子模块的原理与实战</title><link>https://jiejue.ai/2025/07/git-submodule-complete-guide/</link><pubDate>Fri, 04 Jul 2025 21:44:40 +0400</pubDate><guid>https://jiejue.ai/2025/07/git-submodule-complete-guide/</guid><description>&lt;p>当你在开发一个博客网站，想要引入一个漂亮的主题和评论系统时，突然发现这些都是独立的 Git 仓库。你可能会想：是直接下载代码复制过来，还是有更优雅的方式？Git Submodule（子模块）就是专门解决这个问题的工具。&lt;/p></description></item><item><title>Git的设计哲学：为什么Merge比Cherry-pick更智能？</title><link>https://jiejue.ai/2025/06/git-merge-vs-cherry-pick-design-philosophy/</link><pubDate>Thu, 19 Jun 2025 00:32:09 +0400</pubDate><guid>https://jiejue.ai/2025/06/git-merge-vs-cherry-pick-design-philosophy/</guid><description>&lt;p>作为程序员，我们每天都在使用Git，但你真的理解它的设计哲学吗？最近在一个开发场景中，我遇到了一个有趣的问题：当我的开发分支缺少一个即将被推送到主分支的文件时，应该用cherry-pick还是merge来解决？这个看似简单的选择，背后藏着Git设计的核心智慧。&lt;/p></description></item><item><title>理解 Git Pull 和 Git Fetch 的区别</title><link>https://jiejue.ai/2025/05/understanding-git-pull-vs-fetch/</link><pubDate>Sun, 11 May 2025 00:37:23 +0400</pubDate><guid>https://jiejue.ai/2025/05/understanding-git-pull-vs-fetch/</guid><description>&lt;p>如果你使用 Git 进行团队协作，一定会遇到这样的问题：&lt;code>git pull&lt;/code> 和 &lt;code>git fetch&lt;/code> 到底有什么区别？为什么有时候执行 &lt;code>git pull&lt;/code> 后能看到新分支信息，但分支内容却没有更新？&lt;/p></description></item><item><title>Git 进阶技巧：深入理解那些隐藏的强大功能</title><link>https://jiejue.ai/2025/05/git-advanced-tips-deep-dive/</link><pubDate>Sun, 11 May 2025 00:25:19 +0400</pubDate><guid>https://jiejue.ai/2025/05/git-advanced-tips-deep-dive/</guid><description>&lt;p>Git 作为最流行的版本控制系统，除了基本的 add、commit、push 操作外，还隐藏着许多强大的功能。这些功能不仅能提高工作效率，更能帮助我们更好地理解 Git 的工作原理。让我们深入探索这些进阶技巧。&lt;/p></description></item><item><title>深入理解Git引用与范围表示法：从点到线的思维转变</title><link>https://jiejue.ai/2025/04/understanding-git-references-and-ranges/</link><pubDate>Mon, 21 Apr 2025 09:41:48 +0400</pubDate><guid>https://jiejue.ai/2025/04/understanding-git-references-and-ranges/</guid><description>&lt;p>在日常开发中，我们经常需要查看历史提交、比较不同版本之间的差异，或者创建补丁文件。但你是否曾被Git的各种引用表示法（如HEAD~3, HEAD^）和范围符号（..和&amp;hellip;）搞得一头雾水？本文将为你详细解析这些概念，帮助你从&amp;quot;点&amp;quot;到&amp;quot;线&amp;quot;的思维方式转变，更好地理解和使用Git。&lt;/p></description></item><item><title>解决多版本Python依赖冲突：pyenv与venv双剑合璧</title><link>https://jiejue.ai/2025/04/python-version-management-with-pyenv/</link><pubDate>Mon, 21 Apr 2025 00:09:43 +0400</pubDate><guid>https://jiejue.ai/2025/04/python-version-management-with-pyenv/</guid><description>&lt;p>在当今复杂多变的Python开发环境中，Python版本管理可谓是开发者的一大痛点。一边是需要特定旧版本Python的传统项目，一边是要求最新特性的现代框架，如何在一台机器上和谐共处？本文将介绍pyenv与venv的组合使用方案，以解决Python版本依赖冲突问题。&lt;/p></description></item><item><title>Nerd字体与GitHub：从技术实现到辩证思考</title><link>https://jiejue.ai/2025/04/nerd-fonts-github-philosophy/</link><pubDate>Sun, 20 Apr 2025 23:53:54 +0400</pubDate><guid>https://jiejue.ai/2025/04/nerd-fonts-github-philosophy/</guid><description>&lt;p>当你在终端中看到这样精美的提示符显示时：&lt;/p>
&lt;pre tabindex="0">&lt;code>FramePack-macos on main [?] via 🐍 v3.10.16 (env) took 31m27s
󰄛 ❯
&lt;/code>&lt;/pre>&lt;p>你是否好奇这些特殊符号是如何实现的？又为何在GitHub等网页平台上无法正常显示？本文将带你深入探讨Nerd字体的技术细节，了解如何在GitHub上正确显示这些符号，并从哲学角度思考字体演化背后的辩证法则。&lt;/p></description></item><item><title>在GitHub上优雅显示Nerd字体：从实用技巧到哲学思考</title><link>https://jiejue.ai/2025/04/display-nerd-fonts-on-github/</link><pubDate>Sun, 20 Apr 2025 23:53:54 +0400</pubDate><guid>https://jiejue.ai/2025/04/display-nerd-fonts-on-github/</guid><description>&lt;p>你是否曾在终端里看到过这样炫酷的提示符？&lt;/p>
&lt;pre tabindex="0">&lt;code>FramePack-macos on main [?] via 🐍 v3.10.16 (env) took 31m27s
󰄛 ❯
&lt;/code>&lt;/pre>&lt;p>但当你将命令行截图粘贴到GitHub的issue或PR评论中，那些特殊符号却变成了一个个难看的方块？这篇文章将帮助你解决这个问题，让你的GitHub评论也能完美展示终端里的Nerd字体特殊符号。&lt;/p></description></item><item><title>快速设置：在Mac上为不同项目使用不同的Git邮箱</title><link>https://jiejue.ai/2025/04/quick-git-email-setup-for-multiple-projects/</link><pubDate>Fri, 18 Apr 2025 18:48:56 +0400</pubDate><guid>https://jiejue.ai/2025/04/quick-git-email-setup-for-multiple-projects/</guid><description>&lt;p>在同一台Mac上同时处理公司和个人项目时，如何避免用错Git邮箱？本文提供简单直接的解决方案，让你轻松管理多个Git身份。&lt;/p></description></item><item><title>在一台Mac上为多个组织配置不同的Git邮箱</title><link>https://jiejue.ai/2025/04/configure-multiple-git-emails-on-mac/</link><pubDate>Fri, 18 Apr 2025 18:48:56 +0400</pubDate><guid>https://jiejue.ai/2025/04/configure-multiple-git-emails-on-mac/</guid><description>&lt;p>在同一台电脑上同时处理公司项目和个人项目时，如何优雅地切换Git身份信息？本文将分享几种在Mac上为不同组织配置不同Git邮箱的方法，帮助你轻松管理多重Git身份。&lt;/p></description></item><item><title>macOS命令行宝藏：让你的工作流程更高效</title><link>https://jiejue.ai/2025/04/macos-command-line-treasures/</link><pubDate>Tue, 15 Apr 2025 23:05:25 +0400</pubDate><guid>https://jiejue.ai/2025/04/macos-command-line-treasures/</guid><description>&lt;p>你是否遇到过这样的情况：一个重要的Terraform部署正在运行，你需要暂时离开，锁上了屏幕，回来后发现任务被系统休眠中断了？或者你明明只是合上了笔记本盖子，却意外终止了正在执行的重要任务？&lt;/p></description></item><item><title>Git跨分支操作技巧：优雅地比较与管理文件</title><link>https://jiejue.ai/2025/04/git-cross-branch-file-management/</link><pubDate>Tue, 15 Apr 2025 22:21:48 +0400</pubDate><guid>https://jiejue.ai/2025/04/git-cross-branch-file-management/</guid><description>&lt;p>在多人协作的项目中，经常需要比较不同分支中的文件差异，或者从其他分支提取特定文件。传统的做法是克隆多个仓库副本，既浪费磁盘空间又难以管理。本文介绍几种优雅高效的跨分支文件操作方法，帮助你彻底告别笨重的工作方式。&lt;/p></description></item><item><title>Zellij: 现代化的终端多路复用器——从 tmux 迁移指南</title><link>https://jiejue.ai/2025/03/zellij-terminal-multiplexer-guide/</link><pubDate>Sun, 30 Mar 2025 00:48:19 +0400</pubDate><guid>https://jiejue.ai/2025/03/zellij-terminal-multiplexer-guide/</guid><description>&lt;p>你是否曾经为了同时运行多个命令而开了一堆终端窗口？或者每次 SSH 到服务器后担心连接断开会丢失工作进度？终端多路复用器（Terminal Multiplexer）解决了这些问题，而 Zellij 是这个领域中 Rust 实现的后起之秀，带来了出色的用户体验和独特的功能。&lt;/p></description></item><item><title>用 GitUI 轻松搞定代码管理 - 极简 Git 操作指南</title><link>https://jiejue.ai/2025/03/gitui-quick-start-guide/</link><pubDate>Sat, 29 Mar 2025 18:07:58 +0400</pubDate><guid>https://jiejue.ai/2025/03/gitui-quick-start-guide/</guid><description>&lt;p>还在为记不住 Git 命令而发愁？还在为复杂的版本控制操作而头疼？试试 GitUI 吧！它能让你像使用图形界面那样轻松，但速度更快、更高效！&lt;/p></description></item><item><title>uv：重新定义 Python 包管理与环境隔离的未来</title><link>https://jiejue.ai/2025/03/python-uv-in-depth/</link><pubDate>Thu, 27 Mar 2025 23:49:41 +0400</pubDate><guid>https://jiejue.ai/2025/03/python-uv-in-depth/</guid><description>&lt;p>Python 生态系统中的工具链一直以其复杂性而闻名。开发者们被迫在 pip、virtualenv、conda 等工具间切换，每个都有各自的优缺点和使用方式。uv 的出现可能将彻底改变这一现状。&lt;/p></description></item><item><title>告别繁琐：uv 让 Python 环境管理更简单高效</title><link>https://jiejue.ai/2025/03/python-uv-quick-guide/</link><pubDate>Thu, 27 Mar 2025 23:49:41 +0400</pubDate><guid>https://jiejue.ai/2025/03/python-uv-quick-guide/</guid><description>&lt;p>Python 环境管理一直是困扰开发者的难题，是否厌倦了 conda 的臃肿和 virtualenv 的繁琐？uv 可能是你期待已久的救星。&lt;/p></description></item><item><title>解放双手：使用 pre-commit 自动化代码质量检查与修复</title><link>https://jiejue.ai/2025/03/pre-commit-hooks-automation/</link><pubDate>Sun, 23 Mar 2025 17:33:47 +0400</pubDate><guid>https://jiejue.ai/2025/03/pre-commit-hooks-automation/</guid><description>&lt;p>你是否曾经为了处理代码中的行尾空格、文件末尾换行符等问题而头疼不已？或者团队中有人不小心提交了敏感信息或格式混乱的代码？pre-commit 工具将彻底解决这些烦恼，让你在提交代码前自动检查并修复常见问题。&lt;/p></description></item><item><title>Git进阶：优雅地忽略已追踪文件的变更</title><link>https://jiejue.ai/2025/03/git-ignore-tracked-file-changes/</link><pubDate>Fri, 21 Mar 2025 18:27:40 +0400</pubDate><guid>https://jiejue.ai/2025/03/git-ignore-tracked-file-changes/</guid><description>&lt;p>当你使用Git时，是否曾被一些不想提交但总是显示为已修改的文件所困扰？例如MacOS的.DS_Store文件、IDE的配置文件或是子模块中的临时文件？本文将介绍Git中不为人熟知但极其实用的忽略文件变更的方法。&lt;/p></description></item><item><title>Git历史侦探：如何追踪代码变更和定位问题</title><link>https://jiejue.ai/2025/03/git-history-detective/</link><pubDate>Sat, 15 Mar 2025 11:26:31 +0400</pubDate><guid>https://jiejue.ai/2025/03/git-history-detective/</guid><description>&lt;p>当某个函数突然消失，或者某行关键代码被莫名其妙修改时，Git历史记录就是你最强大的调查工具。本文将介绍如何像侦探一样追踪Git历史中的代码变更，解决&amp;quot;谁改了这段代码&amp;quot;、&amp;ldquo;这个函数什么时候被删除的&amp;quot;等问题。&lt;/p></description></item><item><title>Git补救指南：如何优雅地撤销错误提交</title><link>https://jiejue.ai/2025/03/git-undo-commands-guide/</link><pubDate>Sat, 08 Mar 2025 00:23:27 +0400</pubDate><guid>https://jiejue.ai/2025/03/git-undo-commands-guide/</guid><description>&lt;h2 id="前言人非圣贤孰能无错">前言：人非圣贤，孰能无错？&lt;/h2>
&lt;p>在代码开发的日常工作中，错误提交几乎是不可避免的 —— 无论你是将一个调试代码意外地提交了上去，还是把更改提交到了错误的分支，亦或是在提交信息中打错了字。这些都是开发过程中再正常不过的&amp;quot;小意外&amp;quot;。&lt;/p></description></item><item><title>解决 Git 引用冲突：当 pull 操作莫名失败的排障指南</title><link>https://jiejue.ai/2025/02/git-reference-conflict-troubleshooting/</link><pubDate>Tue, 25 Feb 2025 16:45:24 +0400</pubDate><guid>https://jiejue.ai/2025/02/git-reference-conflict-troubleshooting/</guid><description>&lt;p>当我们在协作开发中使用 Git 时，有时会遇到一些令人困惑的错误。比如明明是个简单的 &lt;code>git pull&lt;/code> 操作，却突然报错，而且错误信息还与当前分支看似无关。本文将深入解析 Git 的引用系统，帮你理解并解决一个常见但令人困惑的问题：引用冲突导致的 pull 失败。&lt;/p></description></item><item><title>Git Reset 进阶：像时光机一样掌控代码历史</title><link>https://jiejue.ai/2025/02/git-reset-advance/</link><pubDate>Thu, 20 Feb 2025 22:09:26 +0400</pubDate><guid>https://jiejue.ai/2025/02/git-reset-advance/</guid><description>&lt;p>你是不是经常用 &lt;code>git reset --hard HEAD~1&lt;/code> 来撤销最近的一次提交？其实 Git 的重置功能远比这个强大得多。今天让我们一起来探索 Git Reset 的高级用法，看看如何像使用时光机一样自如地掌控你的代码历史。&lt;/p></description></item><item><title>深入理解Fish Shell的Node.js版本管理 - 原理与实践</title><link>https://jiejue.ai/2025/02/fish-shell-node-version-manager-deep-dive/</link><pubDate>Fri, 07 Feb 2025 23:16:43 +0400</pubDate><guid>https://jiejue.ai/2025/02/fish-shell-node-version-manager-deep-dive/</guid><description>&lt;p>Node.js版本管理是现代前端开发中的一个关键话题。不同的项目可能需要不同版本的Node.js，如何在fish shell环境下优雅地解决这个问题？让我们深入探讨nvm.fish的工作原理和最佳实践。&lt;/p></description></item><item><title>Fish Shell下的Node.js版本管理工具 - 快速上手指南</title><link>https://jiejue.ai/2025/02/fish-shell-node-version-manager-quick-start/</link><pubDate>Fri, 07 Feb 2025 23:16:09 +0400</pubDate><guid>https://jiejue.ai/2025/02/fish-shell-node-version-manager-quick-start/</guid><description>&lt;p>作为一名前端开发者，小王最近遇到了一个烦恼：他需要同时维护几个项目，但这些项目分别使用不同版本的Node.js。在使用fish shell的情况下，如何优雅地解决这个问题呢？&lt;/p></description></item><item><title>解决 Git 中文件末尾换行符引起的差异问题</title><link>https://jiejue.ai/2025/01/fix-git-newline/</link><pubDate>Wed, 29 Jan 2025 09:11:16 +0400</pubDate><guid>https://jiejue.ai/2025/01/fix-git-newline/</guid><description>&lt;h2 id="问题描述">问题描述&lt;/h2></description></item></channel></rss>